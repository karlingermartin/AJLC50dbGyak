1.
CREATE TABLE GYARTO (adoszam INT PRIMARY KEY, nev CHAR(30), telephely CHAR(30));
CREATE TABLE TERMEK (tkod INT PRIMARY KEY, nev CHAR(50), ear INT CHECK (ear>0), gyarto INT FOREIGN KEY REFERENCES Gyarto(nev));

2.
CREATE TABLE GYARTO (adoszam INT PRIMARY KEY, new CHAR(30), telephely CHAR, irsz CHAR(4), varos CHAR(40), utca CHAR(100));
CREATE TABLE TERMEK (tkod INT PRIMARY KEY, nev CHAR(50), ear INT CHECK(ear>0), gyarto INT FOREIGN KEY REFERENCES GYARTO(nev));
CREATE TABLE EGYSEGEK (aru INT FOREING KEY REFERENCES TERMEK(tkod), db INT CHECK(db>0));
CREATE TABLE KOMPONENS (termek INT FOREIGN KEY REFERENCES TERMEK(nev), alkatresz INT FOREIGN KEY REFERENCES ALKATRESZ(akod INT PRIMARY KEY, nev CHAR(50));

3.
CREATE TABLE tanfolyam(tkod INT PRIMARY KEY, ár INT, tipus CHAR(30), megnevezes CHAR(30));
CREATE TABLE resztvevo(tajszam INT PRIMARY KEY, nev CHAR(50), lakcim CHAR(50));

4.
CREATE TABLE TERMEKEK (tkod INT PRIMARY KEY, nev VARCHAR(50) NOT NULL, ear INT CHECK(ear>0), kategoria CHAR(20));
INSERT INTO TERMEKEK VALUES("1","lapat","2000","K1");
INSERT INTO TERMEKEK VALUES("2","sepru","4000","K2");
INSERT INTO TERMEKEK VALUES("3","mosogatogel","1500","K3");
INSERT INTO TERMEKEK VALUES("4","szappan","1000","K4");
INSERT INTO TERMEKEK VALUES("5","pohar","2400","K5");

5.
INSERT INTO TERMEKEK VALUES("alma","lapat","2000","K1"); //hibas szam
INSERT INTO TERMEKEK VALUES("1","NULL","2000","K1"); //üres név
INSERT INTO TERMEKEK VALUES("2","lapat","alma","K1"); //konstans helyett char;
INSERT INTO TERMEKEK VALUES("3","lapat","2000","NULL"); //üres kategória